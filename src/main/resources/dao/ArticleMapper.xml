<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lyzzz.blog.dao.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.lyzzz.blog.entity.Article">
    <!--@mbg.generated-->
    <!--@Table tb_article-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="des" jdbcType="LONGVARCHAR" property="des" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, title, author, des, content, create_time
  </sql>
  <select id="findByTag" resultMap="BaseResultMap">
    SELECT
    a.id, a.title, a.author, a.create_time
    FROM
    tb_article a,
    tb_tag t,
    tb_article_tag at
    WHERE
    t.id = #{id}
    AND
    t.id = at.tag_id
    AND
    a.id = at.article_id;
  </select>

  <select id="findByCategory" resultMap="BaseResultMap">
    SELECT
    a.id, a.title, a.author, a.create_time
    FROM
    tb_article a,
    tb_category c,
    tb_article_category ac
    WHERE
    c.id = #{id}
    AND
    c.id = ac.category_id
    AND
    a.id = ac.article_id;
  </select>


</mapper>